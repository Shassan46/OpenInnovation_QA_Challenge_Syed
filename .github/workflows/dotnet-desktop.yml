name: .NET Core Desktop

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:

  build:

    strategy:
      matrix:
        configuration: [Debug, Release]

    runs-on: windows-latest  

    env:
      Solution_Name: OpenInnovation_QA_Challenge.sln                        
      Test_Project_Path: OpenInnovation_QA_Challenge.csproj    
      Docker_Image_Name: Dockerfile
      Python_API_Repo: https://github.com/openinnovationai/recruiting-qa-challenge

    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Checkout Python API repo
      uses: actions/checkout@v4
      with:
        repository: openinnovationai/recruiting-qa-challenge  # Public repo
        path: python-api

    - name: Set up Docker
      uses: docker/setup-buildx-action@v2

    - name: Build Docker image for Python API
      run: |
        cd python-api
        docker build -t ${{ env.Docker_Image_Name }} .

    - name: Run Python API server in Docker
      run: |
        docker run -d -p 8000:8000 ${{ env.Docker_Image_Name }}  # Adjust port if necessary

    - name: Wait for API server to be ready
      run: |
        for i in {1..30}; do \
          curl -s http://localhost:8000/health && exit 0; \
          sleep 10; \
        done
      # Adjust the health check endpoint and timeout as needed

    # Install the .NET Core workload
    - name: Install .NET Core
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.0.x

    # Restore dependencies
    - name: Restore dependencies
      run: dotnet restore ${{ env.Solution_Name }}
      
    # Build the solution
    - name: Build the solution
      run: dotnet build ${{ env.Solution_Name }} --configuration ${{ matrix.configuration }} --no-restore

    # Execute all unit tests in the test project
    - name: Execute unit tests
      run: dotnet test ${{ env.Test_Project_Path }} --configuration ${{ matrix.configuration }} --no-build --verbosity normal --logger "trx;LogFileName=test_results.trx"

    # Publish test results (if needed)
    - name: Publish Test Results
      uses: actions/upload-artifact@v3
      with:
        name: Test Results
        path: ./OpenInnovation_QA_Challenge/TestResults/test_results.trx

    - name: Stop Python API server
      run: docker ps -q --filter "ancestor=${{ env.Docker_Image_Name }}" | xargs docker stop

   
