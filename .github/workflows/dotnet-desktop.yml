name: .NET Core Desktop

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:

  build:

    strategy:
      matrix:
        configuration: [Debug, Release]

    runs-on: ubuntu-latest

    services:
      docker:
        image: docker:20.10-dind
        options: --privileged

    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Set up Docker
      uses: docker/setup-buildx-action@v2

    - name: Set up Docker
      uses: docker/setup-docker@v1

    - name: Start API server
      run: |
        echo "version: '3.8'
        services:
          api-server:
            image: https://github.com/openinnovationai/recruiting-qa-challenge/blob/main/Dockerfile:tag  
            ports:
              - '8080:8080'" > docker-compose.yml
        docker-compose up -d
      # Wait for the server to be fully up before running tests
      timeout-minutes: 1

    - name: Wait for server to be ready
      run: |
        echo "Waiting for API server to start..."
        sleep 30

    # Install the .NET Core workload
    - name: Install .NET Core
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.0.x

    - name: Restore .NET dependencies
      run: dotnet restore OpenInnovation_QA_Challenge_Syed/OpenInnovation_QA_Challenge.csproj

    - name: Run unit tests
      run: dotnet test OpenInnovation_QA_Challenge_Syed/OpenInnovation_QA_Challenge.csproj --configuration Debug --no-build --verbosity normal --logger "trx;LogFileName=test_results.trx"

    - name: Stop and remove Docker containers
      run: docker-compose down

    - name: Upload test results
      uses: actions/upload-artifact@v3
      with:
        name: test-results
        path: test_results.trx
   
    - name: Upload Docker Compose configuration
      uses: actions/upload-artifact@v3
      with:
        name: docker-compose
        path: docker-compose.yml
